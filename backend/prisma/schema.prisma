// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Usuario {
  id           String        @id @default(uuid())
  nome         String
  email        String        @unique
  senha        String
  nivel        String // "publico" ou "servidor"
  denuncias    Denuncia[]
  ocorrencias  Ocorrencia[]
  notificacoes Notificacao[]
}

model Denuncia {
  id          String       @id @default(uuid())
  codigo      String       @unique // Código de acompanhamento
  titulo      String
  descricao   String
  estado      String
  cidade      String
  localizacao String
  status      String       @default("pendente")
  usuarioId   String?
  usuario     Usuario?     @relation(fields: [usuarioId], references: [id])
  ocorrencias Ocorrencia[]
}

model Ocorrencia {
  id            String   @id @default(uuid())
  denunciaId    String   @unique
  servidorId    String
  status        String   @default("aberta") // "aberta", "em andamento", "concluída"
  data_registro DateTime @default(now())

  denuncia Denuncia @relation(fields: [denunciaId], references: [id])
  servidor Usuario  @relation(fields: [servidorId], references: [id])
}

model Notificacao {
  id         String   @id @default(uuid())
  usuarioId  String
  mensagem   String
  data_envio DateTime @default(now())

  usuario Usuario @relation(fields: [usuarioId], references: [id])
}
